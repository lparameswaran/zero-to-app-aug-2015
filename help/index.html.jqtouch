<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <title>Zero To App Help</title>
    <style type="text/css" media="screen">@import "themes/css/jqtouch.min.css";</style>
    <script src="lib/js/jquery-1.11.3.min.js" type="text/javascript" charset="utf-8"></script>
    <script src="lib/js/jqt.min.js" type="text/javascript" charset="utf-8"></script>
    <script src="lib/js/jqtouch-jquery2.min.js" type="text/javascript" charset="utf-8"></script>
    <script type="text/javascript" charset="utf-8">
      var jQT = new $.jQTouch({
        icon: 'img/ztoa_help.png',
        addGlossToIcon: true,
        startupScreen: 'img/jqt_startup.png',
        statusBar: 'black-translucent'
      });
      $(function(){
        // Custom Javascript (onReady)
      });
    </script>
    <style type="text/css" media="screen">
      #jqt.fullscreen #home .info {
        display: none;
      }   
      div#jqt #about {
        padding: 100px 10px 40px;
        text-shadow: rgba(0, 0, 0, 0.3) 0px -1px 0;
        color: #999;
        font-size: 13px;
        text-align: center;
        background: #161618;
      }   
      div#jqt #about p { 
        margin-bottom: 8px;
      }   
      div#jqt #about a { 
        color: #fff;
        font-weight: bold;
        text-decoration: none;
      }   
    </style>
  </head>
  <body>
    <div id="jqt">
      <div id="about" class="selectable">
        <p><img src="img/ztoa_help.png" /></p>
        <p><strong>zero to app</strong>Help</p>
        <p><em>Help pages for zero to app<br>class held in PA during Aug-2015.</em></p>
        <p><br><br><a href="#" class="grayButton goback">Close</a></p>
      </div>
      <div id="home" class="current">
        <div class="toolbar">
          <h1>jQTouch</h1>
          <a class="button slideup" id="infoButton" href="#about">About</a>
        </div>
        <div class="scroll">
          <ul class="rounded">
            <li class="arrow"><a href="#overview">Class Overview<small class="counter">1</small></a> </li>
            <li class="arrow"><a href="#terms">Terminology<small class="counter">1</small></a></li>
          </ul>
        </div>
      </div>
      <div id="overview" class="selectable">
        <div class="toolbar">
          <h1>Class Overview</h1>
          <a class="back" href="#home">Home</a>
        </div>
        <div class="scroll">
          Over the course of the week, we will develop a cross platform app that will be
          deployed on iOS (iPad/iPhone/iPod touch...) or Android device of your choice.
        </div>
      </div>
      <div id="terms" class="selectable">
        <div class="toolbar">
          <h1>Terms</h1>
          <a class="back" href="#home">Home</a>
        </div>
        <div class="scroll">
          <ul class="rounded">
            <li class="arrow"><a href="#terms_html">HTML</a></li>
            <li class="arrow"><a href="#terms_css">CSS</a></li>
            <li class="arrow"><a href="#terms_javascript">Javascript</a></li>
          </ul>
        </div>
      </div>
      <div id="terms_html" class="selectable">
        <div class="toolbar">
          <h1>HTML</h1>
          <a class="back" href="#terms">Terms</a>
        </div>
        <div class="scroll">
          HTML is used to define the skeleton of your app. Browser renders HTML files.
          A HTML document uses tags - each tag has a beginning (ex., <pre><html></pre>)
          and an end (ex., <pre></html></pre>).
          A minimal HTML document contains: <br>
          <ol>
            <li>1. <strong>!DOCTYPE html</strong> <u>tag</u> at the top (identifies a HTML5 document). </li>
            <li>2. A <strong>html</strong> <u>tag</u> that identifies the start and end of the document. </li>
            <li>3. A <strong>head</strong> <u>tag</u> that identifies the heading section of the document. </li>
              <ol>
               <li>3.1 Within this tag, usually <strong>title</strong> <u>tag</u> is used by the browser to identify the tab. </li>
               <li>3.2 Javascript code/files and css code/files can also be added. </li>
              </ol>
            <li>4. A <strong>head</strong> <u>tag</u> that identifies the main (body) section of the document. </li>
              <ol>
                <li>4.1 This will contain portions of the document that will be rendered in the browser. </li>
              </ol>
            </li>
          </ol>
          A sample HTML document format is as follows:
          <pre>
            &lt;!DOCTYPE html&gt; 
            &lt;html&gt;
              &lt;head&gt;
                &lt;title&gt;First Page&lt;/title&gt;
              &lt;/head&gt;
              &lt;body&gt;
                &lt;h1&gt;Bold heading in my first page&lt;/h1&gt;
                &lt;h6&gt;Bold, but smaller text in my first page&lt;/h1&gt;
              &lt;/body&gt;
            &lt;/html&gt;
          </pre>
          This document will be rendered in the browser as follows:
          <h1>Bold heading in my first page</h1>
          <h6>Bold, but smaller text in my first page</h6>
        </div>
      </div>
      <div id="terms_css" class="selectable">
        <div class="toolbar">
          <h1>CSS</h1>
          <a class="back" href="#terms">Terms</a>
        </div>
        <div class="scroll">
          <u><b>C</b></u>ascading <u><b>S</b></u>tyle <u><b>S</b></u>heets define the beauty (skin) of your app.
          CSS refers to HTML elements either by their tag name (not usual) OR by id (#<id_name>) or by class (.<class_name>).
          A typical CSS may control a tag's class as follows: <br>
          <u>In HTML:</u> <h1 class="xyz"> .... </h1> <br>
          <u>In CSS:</u> .xyz { color: "red", background-color: "blue"; }
          which will set that particular <strong>h1</strong> tag to be rendered with red on blue color.
          A typical CSS may control a tag identified by id <u>abc</u> as follows: <br>
          <u>In HTML:</u> <div id="abc"> .... </div> <br>
          <u>In CSS:</u> #abc { color: "red"; font-size: 200%; }
          which will set that particular <strong>div</strong> tag to be rendered with red color and double the usual font size.
        </div>
      </div>
      <div id="terms_javascript" class="selectable">
        <div class="toolbar">
          <h1>Javascript</h1>
          <a class="back" href="#terms">Terms</a>
        </div>
        <div class="scroll">
          <u><b>Javascript</b></u> are the internal organs of an app. They define behavior and ingest life into the skeleton and skin.
          Javascript functions may be called when there is an event triggered from the HTML document.
          A typical javascript may be called as follows: <br>
          <u>In HTML:</u> &lt;span onclick="digit('9')"&gt;9&lt;/span&gt; <br>
          <u>In javascript:</u> <code>function digit(number) { console.log("You entered digit", number); } </code> <br>
          which will print the message - <u>You entered digit 9</u> on the console when 9 is clicked in the HTML.
          <br><br>
          Javascript can also be used to inject code into a HTML element identified by id.
          <u>In HTML:</u> &lt;span id="xyz"&gt; &lt;/span&gt; <br>
          <u>In javascript:</u> <code>document.getElementById('xyz').innerHTML = "Replace span content with this text";</code> <br>
          which will display the content <u>Replace span content with this text</u> in the HTML when the span statement happens.
          Javascript can also be used to inject code into a HTML element identified by class.
          <u>In HTML:</u> &lt;span class="abc"&gt; &lt;/span&gt; <br>
          <u>In javascript:</u> <code>document.getElementByClass('abc')[0].innerHTML = "Replace first span content with this text";</code> <br>
          which will display the content <u>Replace first span content with this text</u> in the HTML when the first span statement
          is encountered.
        </div>
      </div>
    </div>
  </body>
</html>
